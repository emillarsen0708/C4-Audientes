Index: app/src/main/java/com/example/brintaudientes/LibraryEditFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.brintaudientes;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport android.os.Environment;\r\nimport android.util.Log;\r\nimport android.view.ActionMode;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AbsListView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\n\r\nimport java.lang.reflect.Field;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class LibraryEditFragment extends Fragment implements AccessFragmentViews{\r\n\r\n    private FragmentLiListener listener;\r\n\r\n    private ListView soundLibraryListView;\r\n    private ListViewAdapter adapter;\r\n    public List<String> sounds = new ArrayList<>();\r\n    public List<String> userSelection = new ArrayList<>();\r\n\r\n    public static boolean isActionMode = false;\r\n    public static ActionMode actionMode = null;\r\n\r\n    Field [] fields = R.raw.class.getFields();\r\n\r\n    public List<String> chosenSoundNames = new ArrayList<>();\r\n\r\n    public interface FragmentLiListener {\r\n        void onInputLiSent(CharSequence input);\r\n    }\r\n\r\n    ArrayList<String> arrayList;\r\n\r\n    Button cancel, displaySelected, addAsPreset, importLocalSound, buttonPress;\r\n    EditText presetName;\r\n    PresetFragment presetFragment;\r\n    private String name;\r\n    private boolean isEditReady;\r\n    CheckBox checkBox;\r\n\r\n    ArrayAdapter soundListAdapter;\r\n    MediaPlayer mediaPlayer;\r\n    private int nr = 4;\r\n    Button button;\r\n    int buttonId;\r\n\r\n    public static int selectedPosition = 0;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        // buttonId = MainActivity.mybundle.getInt(\"buttonId\");\r\n\r\n\r\n        View root = inflater.inflate(R.layout.fragment_edit_library, container, false);\r\n\r\n        getSounds();\r\n\r\n        soundLibraryListView = root.findViewById(R.id.listview_songs);\r\n        adapter = new ListViewAdapter(sounds, getActivity());\r\n        soundLibraryListView.setChoiceMode(AbsListView.CHOICE_MODE_MULTIPLE_MODAL);\r\n        soundLibraryListView.setAdapter(adapter);\r\n\r\n        buttonId = MainActivity.mybundle.getInt(\"buttonId\");\r\n\r\n        displaySelected = root.findViewById(R.id.display_selected_button);\r\n    /*    displaySelected.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String itemSelected = \"Selected items:  \\n\";\r\n                for (int i = 0; i < soundLibraryListView.getCount() ; i++) {\r\n                    if(adapter.mCheckedStates.get(i)) {\r\n                        itemSelected += soundLibraryListView.getItemAtPosition(i) + \"\\n\";\r\n                    }\r\n                } Toast.makeText(getActivity(), itemSelected, Toast.LENGTH_SHORT).show();\r\n            }\r\n        });*/\r\n\r\n        soundLibraryListView.setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener() {\r\n            @Override\r\n            public void onItemCheckedStateChanged(ActionMode mode, int position, long id, boolean checked) {\r\n\r\n              /* if (userSelection.contains(sounds.get(position))) {\r\n                    userSelection.remove(sounds.get(position));\r\n                } else {\r\n                    userSelection.add(sounds.get(position));\r\n                }\r\n                Toast.makeText(getActivity(),\"Antal Item: \" +LibraryFragment.userSelection.size(),Toast.LENGTH_SHORT).show();\r\n\r\n                //mode.setTitle(userSelection.size() + \" items selected.. \");*/\r\n            }\r\n\r\n\r\n            @Override\r\n            public boolean onCreateActionMode(ActionMode mode, Menu menu) {\r\n                MenuInflater inflater = mode.getMenuInflater();\r\n                inflater.inflate(R.menu.context_menu, menu);\r\n                isActionMode = true;\r\n                actionMode = null;\r\n                return true;\r\n            }\r\n\r\n            @Override\r\n            public boolean onPrepareActionMode(ActionMode mode, Menu menu) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\r\n                switch (item.getItemId()) {\r\n                    case R.id.action_delete:\r\n                        adapter.removeItems(userSelection);\r\n                        mode.finish();\r\n                        return true;\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onDestroyActionMode(ActionMode mode) {\r\n                isActionMode = false;\r\n                actionMode = null;\r\n                userSelection.clear();\r\n            }\r\n        });\r\n\r\n        presetName = root.findViewById(R.id.preset_title_edittext);\r\n\r\n\r\n        importLocalSound = root.findViewById(R.id.import_local_sound);\r\n\r\n        cancel = root.findViewById(R.id.cancel_button_library);\r\n        cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                ListViewAdapter.count = 0;\r\n                FragmentManager fragmentManager = getParentFragmentManager();\r\n                fragmentManager.beginTransaction()\r\n                        .remove(LibraryEditFragment.this)\r\n                        .addToBackStack(null)\r\n                        .commit();\r\n            }\r\n        });\r\n\r\n        displaySelected = root.findViewById(R.id.display_selected_button);\r\n        addAsPreset = root.findViewById(R.id.add_as_preset_button);\r\n        addAsPreset.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                CharSequence input = presetName.getText().toString();\r\n                listener.onInputLiSent(input);\r\n                MainActivity.strBundle.putString(\"editText\", presetName.getText().toString());\r\n                if (input.toString().isEmpty()) {\r\n                    Toast.makeText(getActivity(), \"Indtast et navn til dit preset\", Toast.LENGTH_LONG).show();\r\n                    userSelection = adapter.getSelectedSongs();\r\n                    Log.d(userSelection.toString(),\"Er blevet tilfÃ¸jet\");\r\n                } else {\r\n                    Field[] fields = R.raw.class.getFields();\r\n                    for (int i = 0; i < fields.length; i++) {\r\n                        if (adapter.mCheckedStates.get(i)) {\r\n                            chosenSoundNames.add(fields[i].getName());\r\n                        }\r\n                    }\r\n                    System.out.println(chosenSoundNames);\r\n                    ListViewAdapter.count = 0;\r\n                    FragmentManager fragmentManager = getParentFragmentManager();\r\n                    fragmentManager.beginTransaction()\r\n                            .remove(LibraryEditFragment.this)\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                }\r\n            }\r\n        });\r\n        presetName = root.findViewById(R.id.preset_title_edittext);\r\n\r\n\r\n        soundLibraryListView.setOnItemClickListener((parent, view, position, id) -> {\r\n            // Ends the Mediaplayer if a Mediaplayer already exist\r\n            view.setSelected(true);\r\n            String pathname = String.valueOf(R.drawable.ic_selected_sound);\r\n            view.setBackground(Drawable.createFromPath(pathname));\r\n\r\n\r\n            if (mediaPlayer != null) {\r\n                mediaPlayer.release();\r\n            }\r\n\r\n            // Creates a Mediaplayer and start playing from Mediaplayer\r\n            int resId = getResources().getIdentifier(arrayList.get(position), \"raw\", getActivity().getPackageName());\r\n            mediaPlayer = MediaPlayer.create(getActivity(), resId);\r\n            mediaPlayer.start();\r\n\r\n        });\r\n\r\n        return root;\r\n    }\r\n\r\n    public void getSounds() {\r\n        for (int i = 0; i < fields.length; i++) {\r\n            sounds.add(fields[i].getName());\r\n        }\r\n    }\r\n\r\n    public void updateEditText(CharSequence newtext) {\r\n        presetName.setText(newtext);\r\n    }\r\n\r\n    @Override\r\n    public void onAttach(Context context) {\r\n        super.onAttach(context);\r\n        if (context instanceof FragmentLiListener) {\r\n            listener = (FragmentLiListener) context;\r\n        } else {\r\n            throw new RuntimeException(context.toString()\r\n                    + \" must implement FragmentLiListner\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onDetach() {\r\n        super.onDetach();\r\n        listener = null;\r\n    }\r\n\r\n    @Override\r\n    public void readExternalStorage() {\r\n        String fileName = \"1.mp3\";\r\n        String path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC).toString();\r\n        MediaPlayer player = new MediaPlayer();\r\n\r\n        try {\r\n            player.setDataSource(path);\r\n            player.prepare();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        } catch (Exception e) {\r\n            System.out.println(\"Exception of type : \" + e.toString());\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        int id = item.getItemId();\r\n        if (id == R.id.action_delete) {\r\n            String itemSelected = \"Selected items:  \\n\";\r\n            for (int i = 0; i < soundLibraryListView.getCount(); i++) {\r\n                if (soundLibraryListView.isItemChecked(i)) {\r\n                    itemSelected += soundLibraryListView.getItemAtPosition(i) + \"\\n\";\r\n                }\r\n\r\n            }\r\n            Toast.makeText(getActivity(), itemSelected, Toast.LENGTH_SHORT).show();\r\n            System.out.println(itemSelected);\r\n\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void setVisibilityForButton(boolean bool) {\r\n        if (bool) {\r\n            soundLibraryListView.setSelector(R.drawable.list_item_selector);\r\n            displaySelected.setVisibility(View.GONE);\r\n            cancel.setVisibility(View.GONE);\r\n            addAsPreset.setVisibility(View.GONE);\r\n            presetName.setVisibility(View.GONE);\r\n            ViewGroup.LayoutParams list = soundLibraryListView.getLayoutParams();\r\n            list.height = 900;\r\n            soundLibraryListView.setLayoutParams(list);\r\n            soundLibraryListView.setPadding(0, 150, 0, 0);\r\n        } else {\r\n            cancel.setVisibility(View.VISIBLE);\r\n            cancel.setVisibility(View.VISIBLE);\r\n            addAsPreset.setVisibility(View.VISIBLE);\r\n            presetName.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n\r\n    public boolean isEditReady() {\r\n        return isEditReady;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/brintaudientes/LibraryEditFragment.java	(revision e7bd59830f956ca7fe47bd78617917cac346c49c)
+++ app/src/main/java/com/example/brintaudientes/LibraryEditFragment.java	(date 1611003797954)
@@ -176,8 +176,6 @@
                 MainActivity.strBundle.putString("editText", presetName.getText().toString());
                 if (input.toString().isEmpty()) {
                     Toast.makeText(getActivity(), "Indtast et navn til dit preset", Toast.LENGTH_LONG).show();
-                    userSelection = adapter.getSelectedSongs();
-                    Log.d(userSelection.toString(),"Er blevet tilfÃ¸jet");
                 } else {
                     Field[] fields = R.raw.class.getFields();
                     for (int i = 0; i < fields.length; i++) {
Index: app/src/main/java/com/example/brintaudientes/ListViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.brintaudientes;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.util.SparseBooleanArray;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ListViewAdapter extends ArrayAdapter<String> {\r\n\r\n    private List<String> sounds = new ArrayList<>();\r\n    private Context context;\r\n    static int count = 0;\r\n    CheckBox checkBox;\r\n\r\n    SparseBooleanArray mCheckedStates = new SparseBooleanArray(sounds.size());\r\n\r\n\r\n   // SparseBooleanArray mCheckedStates = new SparseBooleanArray(sounds.size());\r\n\r\n    public ListViewAdapter(List<String> sounds, Context context) {\r\n        super(context, R.layout.item_layout, sounds);\r\n        this.context = context;\r\n        this.sounds = sounds;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\r\n\r\n        LayoutInflater inflater = ((Activity) context).getLayoutInflater();\r\n        View row = inflater.inflate(R.layout.item_layout, parent, false);\r\n        TextView soundNames = row.findViewById(R.id.song_name);\r\n        soundNames.setText(sounds.get(position));\r\n\r\n        checkBox = row.findViewById(R.id.checkbox);\r\n        checkBox.setTag(position);\r\n        checkBox.setVisibility(View.VISIBLE);\r\n        checkBox.setChecked(mCheckedStates.get(position));\r\n\r\n        /*checkBox.setChecked(Update(sounds.get(position)));\r\n        UpdateCountValue(\"key\");*/\r\n\r\n\r\n        checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                int position = (int) buttonView.getTag();\r\n\r\n                if (isChecked) {\r\n                    count++;\r\n                    mCheckedStates.put(position, true);\r\n                   /* SaveIntoSharepreference(sounds.get(position), isChecked);\r\n                    SaveCount(\"key\",count);\r\n                    Log.d(sounds.get(position), \"Checked\");*/\r\n                } else if (!isChecked) {\r\n                    count--;\r\n                    mCheckedStates.put(position, false);\r\n                    /*SaveIntoSharepreference(sounds.get(position), isChecked);\r\n                    SaveCount(\"key\",count);\r\n                    Log.d(sounds.get(position), \"Unchecked\");*/\r\n                }\r\n                 if (count >= 5) {\r\n                     mCheckedStates.put(position, false);\r\n                    Toast.makeText(context, \"Du kan ikke vÃ¦lge flere end \" + (count - 1) + \" sange\", Toast.LENGTH_LONG).show();\r\n                    /* SaveCount(\"key\",count);*/\r\n                    buttonView.setChecked(false);\r\n                    count--;\r\n                } else {\r\n                    sounds.get(position);\r\n                }\r\n               /* if (LibraryFragment.userSelection.contains(sounds.get(getPosition))){\r\n                        LibraryFragment.userSelection.remove(sounds.get(getPosition));\r\n                    } else{\r\n                        LibraryFragment.userSelection.add(sounds.get(getPosition));\r\n                    }\r\n                    Toast.makeText(context,\"Antal Item: \" +LibraryFragment.userSelection.size(),Toast.LENGTH_SHORT).show();*//*\r\n                }*/\r\n            }\r\n        });\r\n\r\n        return row;\r\n    }\r\n\r\n    public void removeItems(List<String> items) {\r\n        for (String item : items) {\r\n            sounds.remove(item);\r\n        }\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    private void SaveIntoSharepreference(String key, boolean value) {\r\n        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putBoolean(key, value);\r\n        editor.apply();\r\n    }\r\n\r\n    private boolean Update(String key) {\r\n        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this.context);\r\n        boolean checkBoxValue = sharedPreferences.getBoolean(key, checkBox.isChecked());\r\n        return checkBoxValue;\r\n    }\r\n    private void SaveCount(String key, int countValue) {\r\n        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this.context);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putInt(\"key\", countValue);\r\n        editor.apply();\r\n    }\r\n    private int UpdateCountValue(String key) {\r\n        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this.context);\r\n        int countValue = sharedPreferences.getInt(\"key\", count);\r\n        return countValue;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/brintaudientes/ListViewAdapter.java	(revision e7bd59830f956ca7fe47bd78617917cac346c49c)
+++ app/src/main/java/com/example/brintaudientes/ListViewAdapter.java	(date 1611004031901)
@@ -30,9 +30,6 @@
 
     SparseBooleanArray mCheckedStates = new SparseBooleanArray(sounds.size());
 
-
-   // SparseBooleanArray mCheckedStates = new SparseBooleanArray(sounds.size());
-
     public ListViewAdapter(List<String> sounds, Context context) {
         super(context, R.layout.item_layout, sounds);
         this.context = context;
