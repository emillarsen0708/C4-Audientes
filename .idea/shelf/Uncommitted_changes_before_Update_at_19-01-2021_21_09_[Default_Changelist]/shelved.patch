Index: app/src/main/java/com/example/brintaudientes/PresetFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.brintaudientes;\r\n\r\nimport android.media.MediaPlayer;\r\nimport android.media.SoundPool;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.provider.MediaStore;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\n\r\nimport java.lang.reflect.Array;\r\nimport java.util.Arrays;\r\n\r\nimport static android.view.View.GONE;\r\n\r\npublic class PresetFragment extends Fragment implements View.OnTouchListener {\r\n\r\n    Button play, edit;\r\n    RadioButton add1, add2, add3, add4, add5, add6, add7, add8, add9;\r\n\r\n    private boolean play_pause_button = true;\r\n\r\n    private final boolean waitForEdit = true;\r\n    LibraryEditFragment addSound = new LibraryEditFragment();\r\n    LibraryEditFragment addSound2 = new LibraryEditFragment();\r\n    LibraryEditFragment addSound3 = new LibraryEditFragment();\r\n    LibraryEditFragment addSound4 = new LibraryEditFragment();\r\n    LibraryEditFragment addSound5 = new LibraryEditFragment();\r\n    LibraryEditFragment addSound6 = new LibraryEditFragment();\r\n    LibraryEditFragment addSound7 = new LibraryEditFragment();\r\n    LibraryEditFragment addSound8 = new LibraryEditFragment();\r\n    LibraryEditFragment addSound9 = new LibraryEditFragment();\r\n\r\n    MediaPlayer mediaPlayer;\r\n    MediaPlayer mediaPlayer2;\r\n    MediaPlayer mediaPlayer3;\r\n    MediaPlayer mediaPlayer4;\r\n\r\n    Handler mp1_handler = new Handler(Looper.myLooper());\r\n\r\n    boolean isPlaying = true;\r\n\r\n    MediaPlayer [] mediaFiles = {mediaPlayer, mediaPlayer2, mediaPlayer3, mediaPlayer4};\r\n\r\n    RadioGroup radioGroup;\r\n\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View root = inflater.inflate(R.layout.fragment_preset, container, false);\r\n\r\n        radioGroup = root.findViewById(R.id.radio_group);\r\n\r\n        play = root.findViewById(R.id.play_button);\r\n        play.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                switch (radioGroup.getCheckedRadioButtonId()) {\r\n                    case R.id.select_preset_button_1:\r\n                        if (addSound.chosenSoundNames.isEmpty()) {\r\n\r\n                        } else if (play_pause_button) {\r\n                            for (int i = 0; i < addSound.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound.chosenSoundNames.get(i), \"raw\", getActivity().getPackageName()));\r\n                                mediaFiles[i].start();\r\n                                mediaFiles[i].setLooping(true);\r\n                                mediaFiles[i].setVolume(0.5f, 0.5f);\r\n                            }\r\n                            isPlaying = true;\r\n                            play.setBackgroundResource(R.drawable.ic_pause_icon);\r\n                        }\r\n                        if (!play_pause_button) {\r\n                            for (int i = 0; i < addSound.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i].pause();\r\n                            }\r\n                            isPlaying = false;\r\n                            play.setBackgroundResource(R.drawable.ic_play_icon);\r\n                        }\r\n                    case R.id.select_preset_button_2:\r\n                        if (addSound2.chosenSoundNames.isEmpty()) {\r\n\r\n                        } else if (play_pause_button) {\r\n                            for (int i = 0; i < addSound2.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound2.chosenSoundNames.get(i), \"raw\", getActivity().getPackageName()));\r\n                                mediaFiles[i].start();\r\n                                mediaFiles[i].setLooping(true);\r\n                                mediaFiles[i].setVolume(0.5f, 0.5f);\r\n                            }\r\n                            isPlaying = true;\r\n                            play.setBackgroundResource(R.drawable.ic_pause_icon);\r\n                        }\r\n                        if (!play_pause_button) {\r\n                            for (int i = 0; i < addSound2.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i].pause();\r\n                            }\r\n                            isPlaying = false;\r\n                            play.setBackgroundResource(R.drawable.ic_play_icon);\r\n                        }\r\n                    case R.id.select_preset_button_3:\r\n                        if (addSound3.chosenSoundNames.isEmpty()) {\r\n                        } else if (play_pause_button) {\r\n                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound3.chosenSoundNames.get(i), \"raw\", getActivity().getPackageName()));\r\n                                mediaFiles[i].start();\r\n                                mediaFiles[i].setLooping(true);\r\n                                mediaFiles[i].setVolume(0.5f, 0.5f);\r\n                            }\r\n                            play.setBackgroundResource(R.drawable.ic_pause_icon);\r\n                        }\r\n                        if (!play_pause_button) {\r\n                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i].pause();\r\n                            }\r\n                            play.setBackgroundResource(R.drawable.ic_play_icon);\r\n                        }\r\n                    case R.id.select_preset_button_4:\r\n                        if (addSound.chosenSoundNames.isEmpty()) {\r\n                        } else if (play_pause_button) {\r\n                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound3.chosenSoundNames.get(i), \"raw\", getActivity().getPackageName()));\r\n                                mediaFiles[i].start();\r\n                                mediaFiles[i].setLooping(true);\r\n                                mediaFiles[i].setVolume(0.5f, 0.5f);\r\n                            }\r\n                            play.setBackgroundResource(R.drawable.ic_pause_icon);\r\n                        }\r\n                        if (!play_pause_button) {\r\n                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i].pause();\r\n                            }\r\n                            play.setBackgroundResource(R.drawable.ic_play_icon);\r\n                        }\r\n                    case R.id.select_preset_button_5:\r\n                        if (addSound3.chosenSoundNames.isEmpty()) {\r\n                        } else if (play_pause_button) {\r\n                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound3.chosenSoundNames.get(i), \"raw\", getActivity().getPackageName()));\r\n                                mediaFiles[i].start();\r\n                                mediaFiles[i].setLooping(true);\r\n                                mediaFiles[i].setVolume(0.5f, 0.5f);\r\n                            }\r\n                            play.setBackgroundResource(R.drawable.ic_pause_icon);\r\n                        }\r\n                        if (!play_pause_button) {\r\n                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {\r\n                                mediaFiles[i].pause();\r\n                            }\r\n                            play.setBackgroundResource(R.drawable.ic_play_icon);\r\n                        }\r\n                    case R.id.select_preset_button_6:\r\n                }\r\n                if (!addSound.chosenSoundNames.isEmpty()) {\r\n                    play_pause_button = !play_pause_button;\r\n                }\r\n            }\r\n        });\r\n        edit = root.findViewById(R.id.edit_preset_button);\r\n        edit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                if (add1.isChecked()) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction()\r\n                            .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound), \"add1\")\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                    if (!addSound.chosenSoundNames.isEmpty()) {\r\n                        addSound.chosenSoundNames.removeAll(addSound.chosenSoundNames);\r\n                    }\r\n                } else if (add2.isChecked()) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction()\r\n                            .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound2), \"add2\")\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                    if (!addSound2.chosenSoundNames.isEmpty()) {\r\n                        addSound2.chosenSoundNames.removeAll(addSound2.chosenSoundNames);\r\n                    }\r\n                } else if (add3.isChecked()) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction()\r\n                            .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound3), \"add3\")\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                    if (!addSound2.chosenSoundNames.isEmpty()) {\r\n                        addSound2.chosenSoundNames.removeAll(addSound2.chosenSoundNames);\r\n                    }\r\n                } else if (add4.isChecked()) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction()\r\n                            .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound4), \"add4\")\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                    if (!addSound2.chosenSoundNames.isEmpty()) {\r\n                        addSound2.chosenSoundNames.removeAll(addSound2.chosenSoundNames);\r\n                    }\r\n                } else if (add5.isChecked()) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction()\r\n                            .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound5), \"add5\")\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                    if (!addSound5.chosenSoundNames.isEmpty()) {\r\n                        addSound5.chosenSoundNames.removeAll(addSound5.chosenSoundNames);\r\n                    }\r\n                } else if (add6.isChecked()) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction()\r\n                            .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound6), \"add6\")\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                    if (!addSound6.chosenSoundNames.isEmpty()) {\r\n                        addSound6.chosenSoundNames.removeAll(addSound6.chosenSoundNames);\r\n                    }\r\n\r\n                } else if (add7.isChecked()) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction()\r\n                            .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound7), \"add7\")\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                    if (!addSound7.chosenSoundNames.isEmpty()) {\r\n                        addSound7.chosenSoundNames.removeAll(addSound7.chosenSoundNames);\r\n                    }\r\n                } else if (add8.isChecked()) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction()\r\n                            .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound8), \"add8\")\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                    if (!addSound8.chosenSoundNames.isEmpty()) {\r\n                        addSound8.chosenSoundNames.removeAll(addSound8.chosenSoundNames);\r\n                    }\r\n                } else if (add9.isChecked()) {\r\n                    getActivity().getSupportFragmentManager().beginTransaction()\r\n                            .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound9), \"add9\")\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                    if (!addSound9.chosenSoundNames.isEmpty()) {\r\n                        addSound9.chosenSoundNames.removeAll(addSound9.chosenSoundNames);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        add1 = root.findViewById(R.id.select_preset_button_1);\r\n        add1.setOnTouchListener(this);\r\n\r\n        add2 = root.findViewById(R.id.select_preset_button_2);\r\n        add2.setOnTouchListener(this);\r\n\r\n        add3 = root.findViewById(R.id.select_preset_button_3);\r\n        add3.setOnTouchListener(this);\r\n\r\n        add4 = root.findViewById(R.id.select_preset_button_4);\r\n        add4.setOnTouchListener(this);\r\n\r\n        add5 = root.findViewById(R.id.select_preset_button_5);\r\n        add5.setOnTouchListener(this);\r\n\r\n        add6 = root.findViewById(R.id.select_preset_button_6);\r\n        add6.setOnTouchListener(this);\r\n\r\n        add7 = root.findViewById(R.id.select_preset_button_7);\r\n        add7.setVisibility(GONE);\r\n\r\n        add8 = root.findViewById(R.id.select_preset_button_8);\r\n        add8.setVisibility(GONE);\r\n\r\n        add9 = root.findViewById(R.id.select_preset_button_9);\r\n        add9.setVisibility(GONE);\r\n\r\n        return root;\r\n    }\r\n\r\n\r\n\r\n    public LibraryEditFragment getLibraryFragment(LibraryEditFragment libraryEditFragment) {\r\n        if (libraryEditFragment == null) {\r\n            return new LibraryEditFragment();\r\n        } else {\r\n            return libraryEditFragment;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onTouch(View v, MotionEvent event) {\r\n        switch (v.getId()) {\r\n            case R.id.select_preset_button_1:\r\n            case R.id.select_preset_button_2:\r\n            case R.id.select_preset_button_3:\r\n            case R.id.select_preset_button_4:\r\n            case R.id.select_preset_button_5:\r\n            case R.id.select_preset_button_6:\r\n            case R.id.select_preset_button_7:\r\n            case R.id.select_preset_button_8:\r\n            case R.id.select_preset_button_9:\r\n                break;\r\n            default:\r\n                throw new RuntimeException(\"Unknown button ID\");\r\n\r\n        }\r\n        MainActivity.mybundle.putInt(\"buttonId\", v.getId());\r\n        return false;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/brintaudientes/PresetFragment.java	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ app/src/main/java/com/example/brintaudientes/PresetFragment.java	(date 1611077666778)
@@ -1,7 +1,10 @@
 package com.example.brintaudientes;
 
+import android.annotation.SuppressLint;
+import android.media.AudioManager;
 import android.media.MediaPlayer;
 import android.media.SoundPool;
+import android.net.Uri;
 import android.os.Bundle;
 
 import androidx.annotation.NonNull;
@@ -10,17 +13,20 @@
 
 import android.os.Handler;
 import android.os.Looper;
+import android.os.Message;
 import android.provider.MediaStore;
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.inputmethod.EditorInfo;
 import android.widget.Button;
 import android.widget.RadioButton;
 import android.widget.RadioGroup;
 import android.widget.TextView;
 
 import java.lang.reflect.Array;
+import java.nio.channels.ScatteringByteChannel;
 import java.util.Arrays;
 
 import static android.view.View.GONE;
@@ -29,6 +35,10 @@
 
     Button play, edit;
     RadioButton add1, add2, add3, add4, add5, add6, add7, add8, add9;
+    static MediaPlayer mediaPlayer;
+    private Runnable runnable;
+    private AudioManager audioManager;
+    int currentIndex = 0;
 
     private boolean play_pause_button = true;
 
@@ -43,16 +53,18 @@
     LibraryEditFragment addSound8 = new LibraryEditFragment();
     LibraryEditFragment addSound9 = new LibraryEditFragment();
 
-    MediaPlayer mediaPlayer;
+    MediaPlayer mediaPlayer1;
     MediaPlayer mediaPlayer2;
     MediaPlayer mediaPlayer3;
     MediaPlayer mediaPlayer4;
+    MediaPlayer mediaPlayer5;
 
-    Handler mp1_handler = new Handler(Looper.myLooper());
+
+    //Handler mp1_handler = new Handler(Looper.myLooper());
 
     boolean isPlaying = true;
 
-    MediaPlayer [] mediaFiles = {mediaPlayer, mediaPlayer2, mediaPlayer3, mediaPlayer4};
+    //MediaPlayer[] mediaFiles = {mediaPlayer, mediaPlayer2, mediaPlayer3, mediaPlayer4};
 
     RadioGroup radioGroup;
 
@@ -63,115 +75,115 @@
         View root = inflater.inflate(R.layout.fragment_preset, container, false);
 
         radioGroup = root.findViewById(R.id.radio_group);
-
         play = root.findViewById(R.id.play_button);
         play.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 switch (radioGroup.getCheckedRadioButtonId()) {
                     case R.id.select_preset_button_1:
-                        if (addSound.chosenSoundNames.isEmpty()) {
-
-                        } else if (play_pause_button) {
-                            for (int i = 0; i < addSound.chosenSoundNames.size(); i++) {
-                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
-                                mediaFiles[i].start();
-                                mediaFiles[i].setLooping(true);
-                                mediaFiles[i].setVolume(0.5f, 0.5f);
-                            }
-                            isPlaying = true;
-                            play.setBackgroundResource(R.drawable.ic_pause_icon);
-                        }
-                        if (!play_pause_button) {
-                            for (int i = 0; i < addSound.chosenSoundNames.size(); i++) {
-                                mediaFiles[i].pause();
+                        for (int i = 0; i < addSound.chosenSoundNames.size(); i++) {
+                            //mediaPlayer = MediaPlayer.create(getContext().getApplicationContext(), Uri.parse(addSound.chosenSoundNames.get(currentIndex)));
+                            mediaPlayer1 = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
+
+                            if (mediaPlayer1 != null && mediaPlayer1.isPlaying()) {
+                                mediaPlayer1.stop();
+                                play.setBackgroundResource(R.drawable.ic_play_icon);
+                            } else {
+                                mediaPlayer1.start();
+                                play.setBackgroundResource(R.drawable.ic_pause_icon);
                             }
-                            isPlaying = false;
-                            play.setBackgroundResource(R.drawable.ic_play_icon);
                         }
+                        System.out.println("Sange til preset1: " + addSound.chosenSoundNames.toString());
                     case R.id.select_preset_button_2:
-                        if (addSound2.chosenSoundNames.isEmpty()) {
-
-                        } else if (play_pause_button) {
-                            for (int i = 0; i < addSound2.chosenSoundNames.size(); i++) {
-                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound2.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
-                                mediaFiles[i].start();
-                                mediaFiles[i].setLooping(true);
-                                mediaFiles[i].setVolume(0.5f, 0.5f);
-                            }
-                            isPlaying = true;
-                            play.setBackgroundResource(R.drawable.ic_pause_icon);
-                        }
-                        if (!play_pause_button) {
-                            for (int i = 0; i < addSound2.chosenSoundNames.size(); i++) {
-                                mediaFiles[i].pause();
-                            }
-                            isPlaying = false;
-                            play.setBackgroundResource(R.drawable.ic_play_icon);
+                        for (int i = 0; i < addSound2.chosenSoundNames.size(); i++) {
+                            mediaPlayer2 = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound2.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
+                            if (mediaPlayer2 != null && mediaPlayer2.isPlaying()) {
+                                mediaPlayer2.pause();
+                                play.setBackgroundResource(R.drawable.ic_play_icon);
+                            } else {
+                                mediaPlayer2.start();
+                                play.setBackgroundResource(R.drawable.ic_pause_icon);
+                            }
                         }
+                        System.out.println("Sange til preset2: " + addSound2.chosenSoundNames.toString());
                     case R.id.select_preset_button_3:
-                        if (addSound3.chosenSoundNames.isEmpty()) {
-                        } else if (play_pause_button) {
-                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {
-                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound3.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
-                                mediaFiles[i].start();
-                                mediaFiles[i].setLooping(true);
-                                mediaFiles[i].setVolume(0.5f, 0.5f);
-                            }
-                            play.setBackgroundResource(R.drawable.ic_pause_icon);
-                        }
-                        if (!play_pause_button) {
-                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {
-                                mediaFiles[i].pause();
-                            }
-                            play.setBackgroundResource(R.drawable.ic_play_icon);
-                        }
-                    case R.id.select_preset_button_4:
-                        if (addSound.chosenSoundNames.isEmpty()) {
-                        } else if (play_pause_button) {
-                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {
-                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound3.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
-                                mediaFiles[i].start();
-                                mediaFiles[i].setLooping(true);
-                                mediaFiles[i].setVolume(0.5f, 0.5f);
-                            }
-                            play.setBackgroundResource(R.drawable.ic_pause_icon);
-                        }
-                        if (!play_pause_button) {
-                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {
-                                mediaFiles[i].pause();
-                            }
-                            play.setBackgroundResource(R.drawable.ic_play_icon);
-                        }
-                    case R.id.select_preset_button_5:
-                        if (addSound3.chosenSoundNames.isEmpty()) {
-                        } else if (play_pause_button) {
-                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {
-                                mediaFiles[i] = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound3.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
-                                mediaFiles[i].start();
-                                mediaFiles[i].setLooping(true);
-                                mediaFiles[i].setVolume(0.5f, 0.5f);
-                            }
-                            play.setBackgroundResource(R.drawable.ic_pause_icon);
+                        for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {
+                            mediaPlayer3 = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound3.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
+
+                            if (mediaPlayer3 != null && mediaPlayer3.isPlaying()) {
+                                mediaPlayer3.pause();
+                                play.setBackgroundResource(R.drawable.ic_play_icon);
+                            } else {
+                                mediaPlayer3.start();
+                                play.setBackgroundResource(R.drawable.ic_pause_icon);
+                            }
+
+                        }
+                        System.out.println("Sange til preset 3" + addSound3.chosenSoundNames.toString());
+                    case R.id.select_preset_button_5:
+                        for (int i = 0; i < addSound4.chosenSoundNames.size(); i++) {
+                            mediaPlayer4 = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound4.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
+
+                            if (mediaPlayer4 != null && mediaPlayer4.isPlaying()) {
+                                mediaPlayer4.pause();
+                                play.setBackgroundResource(R.drawable.ic_play_icon);
+                            } else {
+                                mediaPlayer4.start();
+                                play.setBackgroundResource(R.drawable.ic_pause_icon);
+                            }
+
+                        }
+                        System.out.println("Sange til preset 4" + addSound4.chosenSoundNames.toString());
+                    case R.id.select_preset_button_6:
+                        for (int i = 0; i < addSound5.chosenSoundNames.size(); i++) {
+                            mediaPlayer5 = MediaPlayer.create(getContext(), getResources().getIdentifier(addSound5.chosenSoundNames.get(i), "raw", getActivity().getPackageName()));
+
+                            if (mediaPlayer5 != null && mediaPlayer5.isPlaying()) {
+                                mediaPlayer5.pause();
+                                play.setBackgroundResource(R.drawable.ic_play_icon);
+                            } else {
+                                mediaPlayer5.start();
+                                play.setBackgroundResource(R.drawable.ic_pause_icon);
+                            }
                         }
-                        if (!play_pause_button) {
-                            for (int i = 0; i < addSound3.chosenSoundNames.size(); i++) {
-                                mediaFiles[i].pause();
-                            }
-                            play.setBackgroundResource(R.drawable.ic_play_icon);
+                        System.out.println("Sange til preset 5" + addSound5.chosenSoundNames.toString());
+                }
+
+            }
+        });
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                while (mediaPlayer != null) {
+                    try {
+                        if (mediaPlayer.isPlaying()) {
+                            Message message = new Message();
+                            //handler.sendMessage(message);
+                            message.what = mediaPlayer.getCurrentPosition();
+                            Thread.sleep(1000);
                         }
-                    case R.id.select_preset_button_6:
-                }
-                if (!addSound.chosenSoundNames.isEmpty()) {
-                    play_pause_button = !play_pause_button;
+
+                    } catch (InterruptedException e) {
+                        e.printStackTrace();
+                    }
                 }
             }
-        });
+
+        }).start();
+
+        @SuppressLint("Handler Leak") Handler handler = new Handler() {
+            @Override
+            public void handleMessage(@NonNull Message msg) {
+                super.handleMessage(msg);
+                //mseekBarTime.setProgress(msg.what); istedet for super.
+            }
+        };
+
+
         edit = root.findViewById(R.id.edit_preset_button);
         edit.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-
                 if (add1.isChecked()) {
                     getActivity().getSupportFragmentManager().beginTransaction()
                             .add(((ViewGroup) getView().getParent()).getId(), getLibraryFragment(addSound), "add1")
@@ -280,7 +292,6 @@
     }
 
 
-
     public LibraryEditFragment getLibraryFragment(LibraryEditFragment libraryEditFragment) {
         if (libraryEditFragment == null) {
             return new LibraryEditFragment();
Index: app/src/main/java/com/example/brintaudientes/LibraryEditFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.brintaudientes;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport android.os.Environment;\r\nimport android.util.Log;\r\nimport android.view.ActionMode;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AbsListView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\nimport android.widget.Toast;\r\n\r\nimport java.lang.reflect.Field;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class LibraryEditFragment extends Fragment implements AccessFragmentViews{\r\n\r\n    private FragmentLiListener listener;\r\n\r\n    private ListView soundLibraryListView;\r\n    private ListViewAdapter adapter;\r\n    public List<String> sounds = new ArrayList<>();\r\n    public List<String> userSelection = new ArrayList<>();\r\n\r\n    public static boolean isActionMode = false;\r\n    public static ActionMode actionMode = null;\r\n\r\n    Field [] fields = R.raw.class.getFields();\r\n\r\n    public List<String> chosenSoundNames = new ArrayList<>();\r\n\r\n    public interface FragmentLiListener {\r\n        void onInputLiSent(CharSequence input);\r\n    }\r\n\r\n    ArrayList<String> arrayList;\r\n\r\n    Button cancel, displaySelected, addAsPreset, importLocalSound, buttonPress;\r\n    EditText presetName;\r\n    PresetFragment presetFragment;\r\n    private String name;\r\n    private boolean isEditReady;\r\n    CheckBox checkBox;\r\n\r\n    ArrayAdapter soundListAdapter;\r\n    MediaPlayer mediaPlayer;\r\n    private int nr = 4;\r\n    Button button;\r\n    int buttonId;\r\n\r\n    public static int selectedPosition = 0;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        // buttonId = MainActivity.mybundle.getInt(\"buttonId\");\r\n\r\n\r\n        View root = inflater.inflate(R.layout.fragment_edit_library, container, false);\r\n\r\n        getSounds();\r\n\r\n        soundLibraryListView = root.findViewById(R.id.listview_songs);\r\n        adapter = new ListViewAdapter(sounds, getActivity());\r\n        soundLibraryListView.setChoiceMode(AbsListView.CHOICE_MODE_MULTIPLE_MODAL);\r\n        soundLibraryListView.setAdapter(adapter);\r\n\r\n        buttonId = MainActivity.mybundle.getInt(\"buttonId\");\r\n\r\n        displaySelected = root.findViewById(R.id.display_selected_button);\r\n    /*    displaySelected.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String itemSelected = \"Selected items:  \\n\";\r\n                for (int i = 0; i < soundLibraryListView.getCount() ; i++) {\r\n                    if(adapter.mCheckedStates.get(i)) {\r\n                        itemSelected += soundLibraryListView.getItemAtPosition(i) + \"\\n\";\r\n                    }\r\n                } Toast.makeText(getActivity(), itemSelected, Toast.LENGTH_SHORT).show();\r\n            }\r\n        });*/\r\n\r\n        soundLibraryListView.setMultiChoiceModeListener(new AbsListView.MultiChoiceModeListener() {\r\n            @Override\r\n            public void onItemCheckedStateChanged(ActionMode mode, int position, long id, boolean checked) {\r\n\r\n              /* if (userSelection.contains(sounds.get(position))) {\r\n                    userSelection.remove(sounds.get(position));\r\n                } else {\r\n                    userSelection.add(sounds.get(position));\r\n                }\r\n                Toast.makeText(getActivity(),\"Antal Item: \" +LibraryFragment.userSelection.size(),Toast.LENGTH_SHORT).show();\r\n\r\n                //mode.setTitle(userSelection.size() + \" items selected.. \");*/\r\n            }\r\n\r\n\r\n            @Override\r\n            public boolean onCreateActionMode(ActionMode mode, Menu menu) {\r\n                MenuInflater inflater = mode.getMenuInflater();\r\n                inflater.inflate(R.menu.context_menu, menu);\r\n                isActionMode = true;\r\n                actionMode = null;\r\n                return true;\r\n            }\r\n\r\n            @Override\r\n            public boolean onPrepareActionMode(ActionMode mode, Menu menu) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\r\n                switch (item.getItemId()) {\r\n                    case R.id.action_delete:\r\n                        adapter.removeItems(userSelection);\r\n                        mode.finish();\r\n                        return true;\r\n                    default:\r\n                        return false;\r\n                }\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onDestroyActionMode(ActionMode mode) {\r\n                isActionMode = false;\r\n                actionMode = null;\r\n                userSelection.clear();\r\n            }\r\n        });\r\n\r\n        presetName = root.findViewById(R.id.preset_title_edittext);\r\n\r\n\r\n        importLocalSound = root.findViewById(R.id.import_local_sound);\r\n\r\n        cancel = root.findViewById(R.id.cancel_button_library);\r\n        cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                ListViewAdapter.count = 0;\r\n                FragmentManager fragmentManager = getParentFragmentManager();\r\n                fragmentManager.beginTransaction()\r\n                        .remove(LibraryEditFragment.this)\r\n                        .addToBackStack(null)\r\n                        .commit();\r\n            }\r\n        });\r\n\r\n        displaySelected = root.findViewById(R.id.display_selected_button);\r\n        addAsPreset = root.findViewById(R.id.add_as_preset_button);\r\n        addAsPreset.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                CharSequence input = presetName.getText().toString();\r\n                listener.onInputLiSent(input);\r\n                MainActivity.strBundle.putString(\"editText\", presetName.getText().toString());\r\n                if (input.toString().isEmpty()) {\r\n                    Toast.makeText(getActivity(), \"Indtast et navn til dit preset\", Toast.LENGTH_LONG).show();\r\n                    userSelection = adapter.getSelectedSongs();\r\n                    Log.d(userSelection.toString(),\"Er blevet tilføjet\");\r\n                } else {\r\n                    Field[] fields = R.raw.class.getFields();\r\n                    for (int i = 0; i < fields.length; i++) {\r\n                        if (adapter.mCheckedStates.get(i)) {\r\n                            chosenSoundNames.add(fields[i].getName());\r\n                        }\r\n                    }\r\n                    System.out.println(chosenSoundNames);\r\n                    ListViewAdapter.count = 0;\r\n                    FragmentManager fragmentManager = getParentFragmentManager();\r\n                    fragmentManager.beginTransaction()\r\n                            .remove(LibraryEditFragment.this)\r\n                            .addToBackStack(null)\r\n                            .commit();\r\n                }\r\n            }\r\n        });\r\n        presetName = root.findViewById(R.id.preset_title_edittext);\r\n\r\n\r\n        soundLibraryListView.setOnItemClickListener((parent, view, position, id) -> {\r\n            // Ends the Mediaplayer if a Mediaplayer already exist\r\n            view.setSelected(true);\r\n            String pathname = String.valueOf(R.drawable.ic_selected_sound);\r\n            view.setBackground(Drawable.createFromPath(pathname));\r\n\r\n\r\n            if (mediaPlayer != null) {\r\n                mediaPlayer.release();\r\n            }\r\n\r\n            // Creates a Mediaplayer and start playing from Mediaplayer\r\n            int resId = getResources().getIdentifier(arrayList.get(position), \"raw\", getActivity().getPackageName());\r\n            mediaPlayer = MediaPlayer.create(getActivity(), resId);\r\n            mediaPlayer.start();\r\n\r\n        });\r\n\r\n        return root;\r\n    }\r\n\r\n    public void getSounds() {\r\n        for (int i = 0; i < fields.length; i++) {\r\n            sounds.add(fields[i].getName());\r\n        }\r\n    }\r\n\r\n    public void updateEditText(CharSequence newtext) {\r\n        presetName.setText(newtext);\r\n    }\r\n\r\n    @Override\r\n    public void onAttach(Context context) {\r\n        super.onAttach(context);\r\n        if (context instanceof FragmentLiListener) {\r\n            listener = (FragmentLiListener) context;\r\n        } else {\r\n            throw new RuntimeException(context.toString()\r\n                    + \" must implement FragmentLiListner\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onDetach() {\r\n        super.onDetach();\r\n        listener = null;\r\n    }\r\n\r\n    @Override\r\n    public void readExternalStorage() {\r\n        String fileName = \"1.mp3\";\r\n        String path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC).toString();\r\n        MediaPlayer player = new MediaPlayer();\r\n\r\n        try {\r\n            player.setDataSource(path);\r\n            player.prepare();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        } catch (Exception e) {\r\n            System.out.println(\"Exception of type : \" + e.toString());\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        int id = item.getItemId();\r\n        if (id == R.id.action_delete) {\r\n            String itemSelected = \"Selected items:  \\n\";\r\n            for (int i = 0; i < soundLibraryListView.getCount(); i++) {\r\n                if (soundLibraryListView.isItemChecked(i)) {\r\n                    itemSelected += soundLibraryListView.getItemAtPosition(i) + \"\\n\";\r\n                }\r\n\r\n            }\r\n            Toast.makeText(getActivity(), itemSelected, Toast.LENGTH_SHORT).show();\r\n            System.out.println(itemSelected);\r\n\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void setVisibilityForButton(boolean bool) {\r\n        if (bool) {\r\n            soundLibraryListView.setSelector(R.drawable.list_item_selector);\r\n            displaySelected.setVisibility(View.GONE);\r\n            cancel.setVisibility(View.GONE);\r\n            addAsPreset.setVisibility(View.GONE);\r\n            presetName.setVisibility(View.GONE);\r\n            ViewGroup.LayoutParams list = soundLibraryListView.getLayoutParams();\r\n            list.height = 900;\r\n            soundLibraryListView.setLayoutParams(list);\r\n            soundLibraryListView.setPadding(0, 150, 0, 0);\r\n        } else {\r\n            cancel.setVisibility(View.VISIBLE);\r\n            cancel.setVisibility(View.VISIBLE);\r\n            addAsPreset.setVisibility(View.VISIBLE);\r\n            presetName.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n\r\n    public boolean isEditReady() {\r\n        return isEditReady;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/brintaudientes/LibraryEditFragment.java	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ app/src/main/java/com/example/brintaudientes/LibraryEditFragment.java	(date 1611067523633)
@@ -18,6 +18,7 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.inputmethod.EditorInfo;
 import android.widget.AbsListView;
 import android.widget.ArrayAdapter;
 import android.widget.Button;
@@ -50,6 +51,7 @@
         void onInputLiSent(CharSequence input);
     }
 
+
     ArrayList<String> arrayList;
 
     Button cancel, displaySelected, addAsPreset, importLocalSound, buttonPress;
@@ -71,6 +73,8 @@
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
 
+
+
         // buttonId = MainActivity.mybundle.getInt("buttonId");
 
 
@@ -112,7 +116,6 @@
                 //mode.setTitle(userSelection.size() + " items selected.. ");*/
             }
 
-
             @Override
             public boolean onCreateActionMode(ActionMode mode, Menu menu) {
                 MenuInflater inflater = mode.getMenuInflater();
@@ -176,8 +179,6 @@
                 MainActivity.strBundle.putString("editText", presetName.getText().toString());
                 if (input.toString().isEmpty()) {
                     Toast.makeText(getActivity(), "Indtast et navn til dit preset", Toast.LENGTH_LONG).show();
-                    userSelection = adapter.getSelectedSongs();
-                    Log.d(userSelection.toString(),"Er blevet tilføjet");
                 } else {
                     Field[] fields = R.raw.class.getFields();
                     for (int i = 0; i < fields.length; i++) {
Index: app/src/main/java/com/example/brintaudientes/ListViewAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.brintaudientes;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.util.SparseBooleanArray;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ListViewAdapter extends ArrayAdapter<String> {\r\n\r\n    private List<String> sounds = new ArrayList<>();\r\n    private Context context;\r\n    static int count = 0;\r\n    CheckBox checkBox;\r\n\r\n    SparseBooleanArray mCheckedStates = new SparseBooleanArray(sounds.size());\r\n\r\n\r\n   // SparseBooleanArray mCheckedStates = new SparseBooleanArray(sounds.size());\r\n\r\n    public ListViewAdapter(List<String> sounds, Context context) {\r\n        super(context, R.layout.item_layout, sounds);\r\n        this.context = context;\r\n        this.sounds = sounds;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\r\n\r\n        LayoutInflater inflater = ((Activity) context).getLayoutInflater();\r\n        View row = inflater.inflate(R.layout.item_layout, parent, false);\r\n        TextView soundNames = row.findViewById(R.id.song_name);\r\n        soundNames.setText(sounds.get(position));\r\n\r\n        checkBox = row.findViewById(R.id.checkbox);\r\n        checkBox.setTag(position);\r\n        checkBox.setVisibility(View.VISIBLE);\r\n        checkBox.setChecked(mCheckedStates.get(position));\r\n\r\n        /*checkBox.setChecked(Update(sounds.get(position)));\r\n        UpdateCountValue(\"key\");*/\r\n\r\n\r\n        checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                int position = (int) buttonView.getTag();\r\n\r\n                if (isChecked) {\r\n                    count++;\r\n                    mCheckedStates.put(position, true);\r\n                   /* SaveIntoSharepreference(sounds.get(position), isChecked);\r\n                    SaveCount(\"key\",count);\r\n                    Log.d(sounds.get(position), \"Checked\");*/\r\n                } else if (!isChecked) {\r\n                    count--;\r\n                    mCheckedStates.put(position, false);\r\n                    /*SaveIntoSharepreference(sounds.get(position), isChecked);\r\n                    SaveCount(\"key\",count);\r\n                    Log.d(sounds.get(position), \"Unchecked\");*/\r\n                }\r\n                 if (count >= 5) {\r\n                     mCheckedStates.put(position, false);\r\n                    Toast.makeText(context, \"Du kan ikke vælge flere end \" + (count - 1) + \" sange\", Toast.LENGTH_LONG).show();\r\n                    /* SaveCount(\"key\",count);*/\r\n                    buttonView.setChecked(false);\r\n                    count--;\r\n                } else {\r\n                    sounds.get(position);\r\n                }\r\n               /* if (LibraryFragment.userSelection.contains(sounds.get(getPosition))){\r\n                        LibraryFragment.userSelection.remove(sounds.get(getPosition));\r\n                    } else{\r\n                        LibraryFragment.userSelection.add(sounds.get(getPosition));\r\n                    }\r\n                    Toast.makeText(context,\"Antal Item: \" +LibraryFragment.userSelection.size(),Toast.LENGTH_SHORT).show();*//*\r\n                }*/\r\n            }\r\n        });\r\n\r\n        return row;\r\n    }\r\n\r\n    public void removeItems(List<String> items) {\r\n        for (String item : items) {\r\n            sounds.remove(item);\r\n        }\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    private void SaveIntoSharepreference(String key, boolean value) {\r\n        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putBoolean(key, value);\r\n        editor.apply();\r\n    }\r\n\r\n    private boolean Update(String key) {\r\n        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this.context);\r\n        boolean checkBoxValue = sharedPreferences.getBoolean(key, checkBox.isChecked());\r\n        return checkBoxValue;\r\n    }\r\n    private void SaveCount(String key, int countValue) {\r\n        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this.context);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putInt(\"key\", countValue);\r\n        editor.apply();\r\n    }\r\n    private int UpdateCountValue(String key) {\r\n        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this.context);\r\n        int countValue = sharedPreferences.getInt(\"key\", count);\r\n        return countValue;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/brintaudientes/ListViewAdapter.java	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ app/src/main/java/com/example/brintaudientes/ListViewAdapter.java	(date 1611065426068)
@@ -30,9 +30,6 @@
 
     SparseBooleanArray mCheckedStates = new SparseBooleanArray(sounds.size());
 
-
-   // SparseBooleanArray mCheckedStates = new SparseBooleanArray(sounds.size());
-
     public ListViewAdapter(List<String> sounds, Context context) {
         super(context, R.layout.item_layout, sounds);
         this.context = context;
Index: app/src/main/java/com/example/brintaudientes/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.brintaudientes;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n//import androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\n\r\n\r\nimport android.app.FragmentManager;\r\nimport android.media.AudioManager;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\n\r\n// todo: Få styr på skærmvending så player ikke kører videre mens player står i pause mode\r\n\r\npublic class MainActivity extends AppCompatActivity implements FragmentManager.OnBackStackChangedListener, AccessFragmentViews, LibraryEditFragment.FragmentLiListener {\r\n\r\n   // ORDRE AF PRESETS\r\n\r\n    /*PresetBuilding MakeConcurrents = new ConcurrentPresetBuilding();\r\n    Preset oneSound = MakeConcurrents.orderThePreset(\"ONE\");\r\n    Preset twoSound = MakeConcurrents.orderThePreset(\"TWO\");\r\n    Preset threeSound = MakeConcurrents.orderThePreset(\"THREE\");\r\n    Preset fourSound = MakeConcurrents.orderThePreset(\"FOUR\");\r\n\r\n\r\n    PresetBuilding MakeContinuous = new ContinuousPresetBuilding();\r\n    Preset oneSound = MakeContinuous.orderThePreset(\"ONE\");\r\n    Preset twoSound = MakeContinuous.orderThePreset(\"TWO\");\r\n    Preset threeSound = MakeContinuous.orderThePreset(\"THREE\");\r\n    Preset fourSound = MakeContinuous.orderThePreset(\"FOUR\");*/\r\n\r\n\r\n    //PlayFragment playFragment = new PlayFragment();\r\n    final PresetFragment presetFragment = new PresetFragment();\r\n    final VolumeFragment volumeFragment = new VolumeFragment();\r\n    final LibraryFragment libraryFragment = new LibraryFragment();\r\n    Fragment selectedFragment = presetFragment;\r\n    Button libraryCancel;\r\n    //String buttonText1, buttonText2, buttonText3, buttonText4, buttonText5, buttonText6, buttonText7, buttonText8 = \"Add new\";\r\n    int buttonId;\r\n    private String presetName;\r\n    public static Bundle mybundle = new Bundle();\r\n    public static Bundle strBundle = new Bundle();\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        BottomNavigationView buttNav = findViewById(R.id.bottom);\r\n        buttNav.setOnNavigationItemSelectedListener(naviListner);\r\n\r\n        getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, libraryFragment, \"3\").hide(libraryFragment).commit();\r\n        getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, volumeFragment, \"2\").hide(volumeFragment).commit();\r\n        getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, presetFragment, \"1\").commit();\r\n        libraryCancel = findViewById(R.id.cancel_button_library);\r\n    }\r\n\r\n    private BottomNavigationView.OnNavigationItemSelectedListener naviListner =\r\n            new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n                @Override\r\n                public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                    switch (item.getItemId()) {\r\n                        case R.id.nav_play:\r\n                            getSupportFragmentManager().beginTransaction()\r\n                                    .hide(selectedFragment)\r\n                                    .show(presetFragment)\r\n                                    .commit();\r\n                            selectedFragment = presetFragment;\r\n                            return true;\r\n                        case R.id.nav_vol:\r\n                            getSupportFragmentManager().beginTransaction()\r\n                                    .hide(selectedFragment)\r\n                                    .show(volumeFragment)\r\n                                    .commit();\r\n                            selectedFragment = volumeFragment;\r\n                            return true;\r\n                        case R.id.nav_preset:\r\n                            getSupportFragmentManager().beginTransaction()\r\n                                    .hide(selectedFragment)\r\n                                    .show(libraryFragment)\r\n                                    .commit();\r\n                            selectedFragment = libraryFragment;\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                }\r\n            };\r\n\r\n    public void setButtonTextString(String buttonText) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackStackChanged() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void setVisibilityForButton(boolean bool) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void readExternalStorage() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onInputLiSent(CharSequence input) {\r\n        buttonId = MainActivity.mybundle.getInt(\"buttonId\");\r\n        if (!input.toString().isEmpty()) {\r\n            switch (buttonId) {\r\n                case R.id.select_preset_button_1:\r\n                    presetFragment.add1.setText(input);\r\n                    break;\r\n                case R.id.select_preset_button_2:\r\n                    presetFragment.add2.setText(input);\r\n                    break;\r\n                case R.id.select_preset_button_3:\r\n                    presetFragment.add3.setText(input);\r\n                    break;\r\n                case R.id.select_preset_button_4:\r\n                    presetFragment.add4.setText(input);\r\n                    break;\r\n                case R.id.select_preset_button_5:\r\n                    presetFragment.add5.setText(input);\r\n                    break;\r\n                case R.id.select_preset_button_6:\r\n                    presetFragment.add6.setText(input);\r\n                    break;\r\n                case R.id.select_preset_button_7:\r\n                    presetFragment.add7.setText(input);\r\n                    break;\r\n                case R.id.select_preset_button_8:\r\n                    presetFragment.add8.setText(input);\r\n                    break;\r\n                case R.id.select_preset_button_9:\r\n                    presetFragment.add9.setText(input);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/brintaudientes/MainActivity.java	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ app/src/main/java/com/example/brintaudientes/MainActivity.java	(date 1611065426086)
@@ -35,9 +35,8 @@
     Preset twoSound = MakeContinuous.orderThePreset("TWO");
     Preset threeSound = MakeContinuous.orderThePreset("THREE");
     Preset fourSound = MakeContinuous.orderThePreset("FOUR");*/
-
-
     //PlayFragment playFragment = new PlayFragment();
+    LibraryEditFragment libraryEditFragment = new LibraryEditFragment();
     final PresetFragment presetFragment = new PresetFragment();
     final VolumeFragment volumeFragment = new VolumeFragment();
     final LibraryFragment libraryFragment = new LibraryFragment();
@@ -51,6 +50,8 @@
 
 
 
+
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_17_08_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_17_08_[Default_Changelist]/shelved.patch	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_17_08_[Default_Changelist]/shelved.patch	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
@@ -1,21 +0,0 @@
-Index: app/src/main/java/com/example/brintaudientes/preset/Preset.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>/*package com.example.brintaudientes.preset;\n\npublic abstract class Preset {\n\n    private String name;\n\n    UserName userPresetName;\n    PresetPlayer player;\n\n\n    public String getName() {\n        return name;\n    }\n    public void setName(String newName) {\n        name = newName;\n    }\n\n    abstract void makeUserPreset();\n\n\n    public void metodeEt() {\n\n    }\n\n    public void metodeTo() {\n\n    }\n\n\n    public String toString() {\n        String infoOnPreset = \"Noget sludder \" + name + \" noget om metode 1 \" + userPresetName +\n                \" noget om metode 2 \" + player;\n\n        return infoOnPreset;\n    }\n}\n\n*/
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/preset/Preset.java	(revision 2284c039132a315668e9b3f192d0717f4f1c6540)
-+++ app/src/main/java/com/example/brintaudientes/preset/Preset.java	(date 1610467471000)
-@@ -1,4 +1,4 @@
--/*package com.example.brintaudientes.preset;
-+package com.example.brintaudientes.preset;
- 
- public abstract class Preset {
- 
-@@ -35,4 +35,3 @@
-     }
- }
- 
--*/
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021__17_39__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021__17_39__Default_Changelist_.xml	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021__17_39__Default_Changelist_.xml	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_12_01_2021,_17_39_[Default_Changelist]" date="1610470163965" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_17_39_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 12/01/2021, 17.39 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_16_49_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_16_49_[Default_Changelist]/shelved.patch	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_16_49_[Default_Changelist]/shelved.patch	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
@@ -1,232 +0,0 @@
-Index: app/src/main/java/com/example/brintaudientes/players/OneSoundPlayerPlan.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>\npackage com.example.brintaudientes.players;\n\nimport android.media.MediaPlayer;\nimport android.widget.SeekBar;\n\npublic class OneSoundPlayerPlan implements PlayerPlan {\n    @Override\n    public void createPlayer() {\n        MediaPlayer player1;\n        SeekBar volume1;\n        //player1 = MediaPlayer.create(getContext(), R.raw.bee_buzzing);\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/players/OneSoundPlayerPlan.java	(revision 6d5556c7814bba5107088b9476ea89e3fc5033c3)
-+++ app/src/main/java/com/example/brintaudientes/players/OneSoundPlayerPlan.java	(date 1610454001000)
-@@ -1,4 +1,4 @@
--
-+/*
- package com.example.brintaudientes.players;
- 
- import android.media.MediaPlayer;
-@@ -11,4 +11,30 @@
-         SeekBar volume1;
-         //player1 = MediaPlayer.create(getContext(), R.raw.bee_buzzing);
-     }
-+
-+    @Override
-+    public void setPlayerSound(int sound) {
-+
-+    }
-+
-+    @Override
-+    public void setPlayerVolume(int volume) {
-+
-+    }
-+
-+    @Override
-+    public void setPlayerPosition(int position) {
-+
-+    }
-+
-+    @Override
-+    public void setPlayerLooper(boolean looper) {
-+
-+    }
-+
-+    @Override
-+    public void setPresetTitel(String titel) {
-+
-+    }
- }
-+*/
-\ No newline at end of file
-Index: app/src/main/java/com/example/brintaudientes/players/Player.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>\npackage com.example.brintaudientes.players;\n\npublic class Player implements PlayerPlan {\n\n    private int playerSound;\n    private int playerVolume;\n    private int playerPosition;\n    private boolean playerLooper;\n    private String playerTitle;\n\n    @Override\n    public void setPlayerSound(int sound) {\n\n        playerSound = sound;\n    }\n\n\n    @Override\n    public void setPlayerVolume(int volume) {\n\n        playerVolume = volume;\n    }\n\n    public int getPlayerVolume() {\n        return playerVolume;\n\n    @Override\n    public void setPlayerPosition(int position) {\n\n        playerPosition = position;\n\n    }\n\n        public int getPlayerPosition() {\n            return playerPosition;\n\n        }\n\n    @Override\n    public void setPlayerLooper(boolean looper) {\n\n        playerLooper = looper;\n    }\n\n    @Override\n    public void setPresetTitel(String titel) {\n\n        playerTitle = titel;\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/players/Player.java	(revision 6d5556c7814bba5107088b9476ea89e3fc5033c3)
-+++ app/src/main/java/com/example/brintaudientes/players/Player.java	(date 1610453901000)
-@@ -1,4 +1,4 @@
--
-+/*
- package com.example.brintaudientes.players;
- 
- public class Player implements PlayerPlan {
-@@ -48,4 +48,5 @@
- 
-         playerTitle = titel;
-     }
--}
-\ No newline at end of file
-+}
-+*/
-Index: app/src/main/java/com/example/brintaudientes/preset/PresetPlayer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.brintaudientes.preset;\n\npublic interface PresetPlayer {\n\n    public String toString();\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/preset/PresetPlayer.java	(revision 6d5556c7814bba5107088b9476ea89e3fc5033c3)
-+++ app/src/main/java/com/example/brintaudientes/preset/PresetPlayer.java	(date 1610453793000)
-@@ -1,6 +1,8 @@
- package com.example.brintaudientes.preset;
- 
-+import android.media.MediaPlayer;
-+
- public interface PresetPlayer {
- 
--    public String toString();
-+    public MediaPlayer presetplayer();
- }
-Index: app/src/main/java/com/example/brintaudientes/preset/FourPresetPlayer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.brintaudientes.preset;\n\npublic class FourPresetPlayer implements PresetPlayer{\n    public String FourPresetPlayer() {\n        return \" \";\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/preset/FourPresetPlayer.java	(revision 6d5556c7814bba5107088b9476ea89e3fc5033c3)
-+++ app/src/main/java/com/example/brintaudientes/preset/FourPresetPlayer.java	(date 1610453958000)
-@@ -1,7 +1,14 @@
- package com.example.brintaudientes.preset;
- 
-+import android.media.MediaPlayer;
-+
- public class FourPresetPlayer implements PresetPlayer{
-     public String FourPresetPlayer() {
-         return " ";
-     }
-+
-+    @Override
-+    public MediaPlayer presetplayer() {
-+        return null;
-+    }
- }
-Index: app/src/main/java/com/example/brintaudientes/preset/ThreePresetPlayer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.brintaudientes.preset;\n\npublic class ThreePresetPlayer implements PresetPlayer{\n    public String ThreePresetPlayer() {\n        return \" \";\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/preset/ThreePresetPlayer.java	(revision 6d5556c7814bba5107088b9476ea89e3fc5033c3)
-+++ app/src/main/java/com/example/brintaudientes/preset/ThreePresetPlayer.java	(date 1610453938000)
-@@ -1,7 +1,14 @@
- package com.example.brintaudientes.preset;
- 
-+import android.media.MediaPlayer;
-+
- public class ThreePresetPlayer implements PresetPlayer{
-     public String ThreePresetPlayer() {
-         return " ";
-     }
-+
-+    @Override
-+    public MediaPlayer presetplayer() {
-+        return null;
-+    }
- }
-Index: app/src/main/java/com/example/brintaudientes/preset/TwoPresetPlayer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.brintaudientes.preset;\n\npublic class TwoPresetPlayer implements PresetPlayer {\n    public String TwoPresetPlayer() {\n        return \" \";\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/preset/TwoPresetPlayer.java	(revision 6d5556c7814bba5107088b9476ea89e3fc5033c3)
-+++ app/src/main/java/com/example/brintaudientes/preset/TwoPresetPlayer.java	(date 1610453793000)
-@@ -1,7 +1,14 @@
- package com.example.brintaudientes.preset;
- 
-+import android.media.MediaPlayer;
-+
- public class TwoPresetPlayer implements PresetPlayer {
-     public String TwoPresetPlayer() {
-         return " ";
-     }
-+
-+    @Override
-+    public MediaPlayer presetplayer() {
-+        return null;
-+    }
- }
-Index: app/src/main/java/com/example/brintaudientes/preset/PresetBuilding.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.brintaudientes.preset;\n\npublic abstract class PresetBuilding {\n\n    protected abstract Preset makePreset(String typeOfPreset);\n\n    public Preset orderThePreset(String typeOfPreset) {\n        Preset thePreset = makePreset(typeOfPreset);\n\n        thePreset.makeUserPreset();\n        thePreset.metodeEt();\n        thePreset.metodeTo();\n\n        return thePreset;\n\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/preset/PresetBuilding.java	(revision 6d5556c7814bba5107088b9476ea89e3fc5033c3)
-+++ app/src/main/java/com/example/brintaudientes/preset/PresetBuilding.java	(date 1610447099000)
-@@ -14,4 +14,5 @@
-         return thePreset;
- 
-     }
--}
-\ No newline at end of file
-+}
-+
-Index: app/src/main/java/com/example/brintaudientes/preset/ConcurrentPresetBuilding.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.brintaudientes.preset;\n\npublic class ConcurrentPresetBuilding extends PresetBuilding {\n\n    protected Preset makePreset(String typeOfPreset) {\n        Preset thePreset = null;\n\n\n        if (typeOfPreset.equals(\"ONE\")) {\n            PresetFactory presetPartsFactory = new OneConcurrentPresetFactory();\n            thePreset = new OneConcurrentPresetFactory(presetPartsFactory);\n            thePreset.setName(\"Concurrent One-Sound Preset\");\n        }\n        else\n            if (typeOfPreset.equals(\"TWO\")) {\n            PresetFactory presetPartsFactory = new TwoConcurrentPresetFactory();\n            thePreset = new TwoConcurrentPreset(presetPartsFactory);\n            thePreset.setName(\"Concurrent Two-Sound Preset\");\n        }\n            else\n            if (typeOfPreset.equals(\"THREE\")) {\n                PresetFactory presetPartsFactory = new ThreeConcurrentPresetFactory();\n                thePreset = new ThreeConcurrentPreset(presetPartsFactory);\n                thePreset.setName(\"Concurrent Three-Sound Preset\");\n            }\n            else\n            if (typeOfPreset.equals(\"FOUR\")) {\n                PresetFactory presetPartsFactory = new FourConcurrentPresetFactory();\n                thePreset = new FourConcurrentPreset(presetPartsFactory);\n                thePreset.setName(\"Concurrent Four-Sound Preset\");\n            }\n            return thePreset;\n    }\n}\n\n/*\n    @Override\n    public PresetFactory getPreset(String presetType) {\n        if (presetType.equalsIgnoreCase(\"TWO\")) {\n            return new TwoConcurrentPresetFactory();\n        }\n        else if (presetType.equalsIgnoreCase(\"Three\")) {\n            return new ThreeConcurrentPresetFactory();\n        }\n        else if (presetType.equalsIgnoreCase(\"FOUR\")) {\n            return new OneConcurrentPreset();\n        }\n        else if (presetType.equalsIgnoreCase(\"ONE\")) {\n            return new OneConcurrentPresetFactory();\n        }\n        return null;\n    }\n\n */
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/preset/ConcurrentPresetBuilding.java	(revision 6d5556c7814bba5107088b9476ea89e3fc5033c3)
-+++ app/src/main/java/com/example/brintaudientes/preset/ConcurrentPresetBuilding.java	(date 1610451840000)
-@@ -6,9 +6,10 @@
-         Preset thePreset = null;
- 
- 
-+
-         if (typeOfPreset.equals("ONE")) {
-             PresetFactory presetPartsFactory = new OneConcurrentPresetFactory();
--            thePreset = new OneConcurrentPresetFactory(presetPartsFactory);
-+            thePreset = new OneConcurrentPreset(presetPartsFactory);
-             thePreset.setName("Concurrent One-Sound Preset");
-         }
-         else
-Index: app/src/main/java/com/example/brintaudientes/preset/OnePresetPlayer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.brintaudientes.preset;\n\npublic class OnePresetPlayer implements PresetPlayer {\n\n   public String OnePresetPlayer() {\n       return \" \";\n   }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/preset/OnePresetPlayer.java	(revision 6d5556c7814bba5107088b9476ea89e3fc5033c3)
-+++ app/src/main/java/com/example/brintaudientes/preset/OnePresetPlayer.java	(date 1610453793000)
-@@ -1,8 +1,20 @@
- package com.example.brintaudientes.preset;
- 
-+import android.media.MediaPlayer;
-+
-+import com.example.brintaudientes.LibraryFragment;
-+
- public class OnePresetPlayer implements PresetPlayer {
- 
--   public String OnePresetPlayer() {
--       return " ";
--   }
-+    @Override
-+
-+    public MediaPlayer presetplayer() {
-+        MediaPlayer mediaPlayer = new MediaPlayer();
-+        if (mediaPlayer != null) {
-+            mediaPlayer.release();
-+        }
-+
-+
-+        return mediaPlayer;
-+    }
- }
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_17_39_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_17_39_[Default_Changelist]/shelved.patch	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_17_39_[Default_Changelist]/shelved.patch	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
@@ -1,24 +0,0 @@
-Index: app/src/main/java/com/example/brintaudientes/LibraryFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.brintaudientes;\n\nimport android.graphics.drawable.Drawable;\nimport android.media.MediaPlayer;\nimport android.os.Bundle;\n\nimport androidx.fragment.app.Fragment;\n\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.ListView;\n\nimport java.lang.reflect.Field;\nimport java.util.ArrayList;\n\n/**\n * A simple {@link Fragment} subclass.\n * Use the {@link LibraryFragment #newInstance} factory method to\n * create an instance of this fragment.\n */\npublic class LibraryFragment extends Fragment {\n\n    ListView antiListView;\n    ArrayList<String> arrayList;\n\n    ArrayAdapter antiAdapter;\n    MediaPlayer mediaPlayer;\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        View root = inflater.inflate(R.layout.fragment_library, container, false);\n\n        antiListView = root.findViewById(R.id.listview_songs);\n        arrayList = new ArrayList<String>();\n        Field[] fields = R.raw.class.getFields();\n        for (int i = 0; i < fields.length; i++) {\n            arrayList.add(fields[i].getName());\n        }\n        antiAdapter = new ArrayAdapter(getActivity(), R.layout.listview_text_color, arrayList);\n        antiListView.setAdapter(antiAdapter);\n\n        antiListView.setOnItemClickListener((parent, view, position, id) -> {\n            // Ends the Mediaplayer if a Mediaplayer already exist\n            view.setSelected(true);\n            String pathname = String.valueOf(R.drawable.listview_selector);\n            view.setBackground(Drawable.createFromPath(pathname));\n\n\n            //if (mediaPlayer != null) {\n              //  mediaPlayer.release();\n            //}\n\n            // Creates a Mediaplayer and start playing from Mediaplayer\n            int resId = getResources().getIdentifier(arrayList.get(position), \"raw\", getActivity().getPackageName());\n            mediaPlayer = MediaPlayer.create(getActivity(), resId);\n            mediaPlayer.start();\n\n        });\n        \n        return root;\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/brintaudientes/LibraryFragment.java	(revision 44350173779f610da0ee9f69bdc22c2225e1dce3)
-+++ app/src/main/java/com/example/brintaudientes/LibraryFragment.java	(date 1610468717000)
-@@ -42,11 +42,12 @@
-         antiAdapter = new ArrayAdapter(getActivity(), R.layout.listview_text_color, arrayList);
-         antiListView.setAdapter(antiAdapter);
- 
-+        antiListView = root.findViewById(R.id.listview_songs);
-         antiListView.setOnItemClickListener((parent, view, position, id) -> {
-             // Ends the Mediaplayer if a Mediaplayer already exist
--            view.setSelected(true);
-+            root.setSelected(true);
-             String pathname = String.valueOf(R.drawable.listview_selector);
--            view.setBackground(Drawable.createFromPath(pathname));
-+            root.setBackground(Drawable.createFromPath(pathname));
- 
- 
-             //if (mediaPlayer != null) {
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021__16_49__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021__16_49__Default_Changelist_.xml	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021__16_49__Default_Changelist_.xml	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_12_01_2021,_16_49_[Default_Changelist]" date="1610466769446" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_16_49_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 12/01/2021, 16.49 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021__17_08__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021__17_08__Default_Changelist_.xml	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021__17_08__Default_Changelist_.xml	(revision 7e6783725a6d0091234d10d0f1b30d7f6545d1bc)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_12_01_2021,_17_08_[Default_Changelist]" date="1610467726383" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_12_01_2021,_17_08_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 12/01/2021, 17.08 [Default Changelist]" />
-</changelist>
\ No newline at end of file
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_06_01_2021__23_32__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_06_01_2021__23_32__Default_Changelist_.xml
